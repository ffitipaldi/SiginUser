@page "/dominio/editar/{dominioId:int}"
@using SiginUser.Models
@inject HttpClient  http
@inject NavigationManager navigation
@using SiginUser.Pages.Dominio
<PageTitle>Editar Domínios</PageTitle>

<h2>Editar Domínio</h2>

<EditForm Model="@dominio" OnValidSubmit="@SalvarEdicaoDominio">
    <DataAnnotationsValidator />
    
    <div class="form-group">
        <label form="campo">Campo</label>
        <div>
            <InputText @bind-Value="@dominio.Campo" class="form-control" />
            <ValidationMessage For="@(()=>dominio.Campo)" />
        </div>
    </div>
    <div class="form-group">
        <label form="sigla">Sigla</label>
        <div>
            <InputText @bind-Value="@dominio.Sigla" class="form-control" />
            <ValidationMessage For="@(()=>dominio.Sigla)" />
        </div>
    </div>
        <div class="form-group">
        <label form="descricao">Descricao</label>
        <div>
            <InputText @bind-Value="@dominio.Descricao" class="form-control" />
            <ValidationMessage For="@(()=>dominio.Descricao)" />
        </div>
    </div>
        <div class="form-group">
        <label form="sequencia">Sequência</label>
        <div>
            <InputNumber @bind-Value="@dominio.Sequencia" class="form-control" />
            <ValidationMessage For="@(()=>dominio.Sequencia)" />
        </div>
    </div>
    <br/>
    <button type="submit" class="btn btn-success">Salvar</button>
    <button class="btn btn-danger" @onclick="@CancelarEdicaoDominio">Cancelar</button>
</EditForm>

@code {

    [Parameter]
    public int dominioId { get; set; }

    //instancia a classe Dominio no objeto dominio
    Dominio dominio = new Dominio();    


    protected async override Task OnParametersSetAsync()
    {
        //ler os dados do domínio a ser editado
        http.BaseAddress = new Uri("https://localhost:7037/");

        if( dominioId > 0)
        {
            dominio = await http.GetFromJsonAsync<Dominio>($"api/dominio/GetDominioById/{dominioId}");
        }
    }

    async Task SalvarEdicaoDominio()
    {
        //salva o objeto dominio editado
        if (dominioId == 0)
        {
            //inclui
            await http.PostAsJsonAsync("api/dominio/AddDominio", dominio);
            navigation.NavigateTo("dominio");           
        }
        else
        {
            //altera
            await http.PutAsJsonAsync($"api/dominio/UpdateDominioById/{dominioId}", dominio);
            navigation.NavigateTo("dominio");
        }
    }

    void CancelarEdicaoDominio()
    {
        //navega de volta para a pagina index
        navigation.NavigateTo("dominio");
    }
}
